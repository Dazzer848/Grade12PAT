/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import Backend.Part;
import Backend.inventoryManager;
import DBMS.DB;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author dazzl
 */
public class editPanel extends javax.swing.JFrame {

    // The global variables that are required for fulling in the data on this screen.
    private Part part;
    private inventoryManager manager;

    /**
     * Creates new form editPanel
     */
    //Building site
    public editPanel(Part selectedPart) {
        initComponents();
        // Set's the global variable ( I.e the part data we need ) to the class specific part
        this.part = selectedPart;
        
        //Makes an inventory manager
        this.manager = new inventoryManager();
        
        // This method populates the UI components with the data from the class
        populateFields();
        
        // Disposes the screen on close but not the whole prgram
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        
        // Populates the combo box with the correct fields which can be selected for a part
        catagorySelectionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"ENGINE", "FUSELAGE", "WINGS", "PAINTS"}));
        
        //Places the screen in the middle of the users display
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editItemHeader = new javax.swing.JLabel();
        enterItemIDTextField = new javax.swing.JTextField();
        enterPartNameTextField = new javax.swing.JTextField();
        quantitiyLable = new javax.swing.JLabel();
        itemQuantitySpinner = new javax.swing.JSpinner();
        catagorySelectionComboBox = new javax.swing.JComboBox<>();
        priceLabel = new javax.swing.JLabel();
        itemPriceSpinner = new javax.swing.JSpinner();
        confirmButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        editItemHeader.setFont(new java.awt.Font("Candara Light", 0, 48)); // NOI18N
        editItemHeader.setText("EDIT ITEM");

        enterItemIDTextField.setText("Enter your ID...");
        enterItemIDTextField.setToolTipText("");

        enterPartNameTextField.setText("Enter your name...");
        enterPartNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterPartNameTextFieldActionPerformed(evt);
            }
        });

        quantitiyLable.setText("Quantitiy:");

        catagorySelectionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Category", "Item 2", "Item 3", "Item 4" }));

        priceLabel.setText("Price");

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(43, 43, 43))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(itemPriceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quantitiyLable)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(itemQuantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(enterItemIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(enterPartNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(catagorySelectionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(editItemHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(editItemHeader)
                .addGap(26, 26, 26)
                .addComponent(enterItemIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(enterPartNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(catagorySelectionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceLabel)
                    .addComponent(quantitiyLable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemQuantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemPriceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Enetering the name of the part
    private void enterPartNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterPartNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterPartNameTextFieldActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        //Validate and approve the data
        
        //Gets the new name of the part as entered
        String partName = enterPartNameTextField.getText();
        
        //Get's the catogory that the user selected
        String category = catagorySelectionComboBox.getSelectedItem().toString();
        
        //Get's the price that the user entered
        int price = (int) itemPriceSpinner.getValue();
        
        // Get's the quantity entered
        int quantity = (int) itemQuantitySpinner.getValue();

        //Validation
        if (partName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Part name cannot be empty.");
            return;
        }

        //Update the part object to relfect the changes
        part.setName(partName);
        part.setCatogory(category);
        part.setPrice(price);
        part.setQuantity(quantity);

        // Update the database
        boolean success = manager.updatePartDetails(part);

        //Ensures the success of the operation
        if (success) {
            JOptionPane.showMessageDialog(this, "Part updated successfully.");
            this.dispose();
            
        }
        //Reports an error
        else {
            JOptionPane.showMessageDialog(this, "Failed to update part.");
        }
    }//GEN-LAST:event_confirmButtonActionPerformed
    
    // The metod which fills in the data of the UI components
    private void populateFields() {
        //Makes Enters the item's ID
        enterItemIDTextField.setText(String.valueOf(part.getPartID()));
        
        //Ensures that the item ID cannot be edited
        enterItemIDTextField.setEditable(false);
        
        //Fills in the name of the part
        enterPartNameTextField.setText(part.getName());

        // Set category in JComboBox
        catagorySelectionComboBox.setSelectedItem(part.getCatogory());

        // Set price in JSpinner
        itemPriceSpinner.setValue(part.getPrice());

        // Set quantity in JSpinner
        itemQuantitySpinner.setValue(part.getQuantity());
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> catagorySelectionComboBox;
    private javax.swing.JButton confirmButton;
    private javax.swing.JLabel editItemHeader;
    private javax.swing.JTextField enterItemIDTextField;
    private javax.swing.JTextField enterPartNameTextField;
    private javax.swing.JSpinner itemPriceSpinner;
    private javax.swing.JSpinner itemQuantitySpinner;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JLabel quantitiyLable;
    // End of variables declaration//GEN-END:variables
}
