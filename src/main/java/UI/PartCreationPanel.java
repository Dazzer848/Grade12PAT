/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import Backend.Part;
import Backend.inventoryManager;
import DBMS.DB;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author dazzl
 */
public class PartCreationPanel extends javax.swing.JFrame {

    // The global variables that are required for fulling in the data on this screen.
    private inventoryManager manager;

    /**
     * Creates new form editPanel
     */
    //Building site
    public PartCreationPanel() {
        initComponents();

        
        //Makes an inventory manager
        this.manager = new inventoryManager();
        
        // Disposes the screen on close but not the whole prgram
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        
        // Populates the combo box with the correct fields which can be selected for a part
        catagorySelectionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"ENGINE", "FUSELAGE", "WINGS", "PAINTS"}));
        
        //Places the screen in the middle of the users display
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editItemHeader = new javax.swing.JLabel();
        enterPartNameTextField = new javax.swing.JTextField();
        quantitiyLable = new javax.swing.JLabel();
        itemQuantitySpinner = new javax.swing.JSpinner();
        catagorySelectionComboBox = new javax.swing.JComboBox<>();
        priceLabel = new javax.swing.JLabel();
        itemPriceSpinner = new javax.swing.JSpinner();
        confirmButton = new javax.swing.JButton();
        partNameJLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        editItemHeader.setFont(new java.awt.Font("Candara Light", 0, 48)); // NOI18N
        editItemHeader.setText("CREATE ITEM");

        enterPartNameTextField.setText("Please enter your part's name");
        enterPartNameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                enterPartNameTextFieldFocusGained(evt);
            }
        });
        enterPartNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterPartNameTextFieldActionPerformed(evt);
            }
        });

        quantitiyLable.setFont(new java.awt.Font("Corbel", 1, 18)); // NOI18N
        quantitiyLable.setText("Quantitiy:");

        catagorySelectionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Category", "Item 2", "Item 3", "Item 4" }));

        priceLabel.setFont(new java.awt.Font("Corbel", 1, 18)); // NOI18N
        priceLabel.setText("Price");

        confirmButton.setFont(new java.awt.Font("Corbel", 1, 18)); // NOI18N
        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        partNameJLabel.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        partNameJLabel.setText("PART NAME: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(partNameJLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(enterPartNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(catagorySelectionComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(itemPriceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quantitiyLable)
                                    .addComponent(itemQuantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(editItemHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(editItemHeader)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterPartNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(partNameJLabel))
                .addGap(37, 37, 37)
                .addComponent(catagorySelectionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceLabel)
                    .addComponent(quantitiyLable))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemQuantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemPriceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Enetering the name of the part
    private void enterPartNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterPartNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterPartNameTextFieldActionPerformed

    private void enterPartNameTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_enterPartNameTextFieldFocusGained
        enterPartNameTextField.setText("");
    }//GEN-LAST:event_enterPartNameTextFieldFocusGained

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        try {
            //Validate and approve the data

            //Gets the new name of the part as entered
            String partName = enterPartNameTextField.getText();

            //Get's the catogory that the user selected
            String category = catagorySelectionComboBox.getSelectedItem().toString();

            //Get's the price that the user entered
            int price = (int) itemPriceSpinner.getValue();

            // Get's the quantity entered
            int quantity = (int) itemQuantitySpinner.getValue();

            //Validation
            if (partName.isEmpty() || enterPartNameTextField.getText().equals("cre")) {
                JOptionPane.showMessageDialog(this, "Part name cannot be empty.");
                return;
            }

            //Price Validation
            if (price <= 0) {
                JOptionPane.showMessageDialog(this, "Price must be greater than zero.");
                return;
            }

            // Quantity Validation
            if (quantity <= 0) {
                JOptionPane.showMessageDialog(this, "Quantity must be greater than zero.");
                return;
            }

            ResultSet highestPartIDTable = DB.query("SELECT part_ID FROM sys.inventory ORDER BY part_ID DESC LIMIT 1 ;");
            highestPartIDTable.next();
            int highestPartID = highestPartIDTable.getInt(1) + 1;
            //Update the part object to relfect the changes
            Part newPart = new Part(highestPartID, partName, price, category, quantity);
            // Update the database
            boolean success = manager.updatePartDetails(newPart);

            //Ensures the success of the operation
            if (success) {
                JOptionPane.showMessageDialog(this, "Part Created successfully.");
                this.dispose();

            }

            //Reports an error
            else {
                JOptionPane.showMessageDialog(this, "Failed to Create part.");
            }
        } catch (SQLException ex) {
            Logger.getLogger(PartCreationPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_confirmButtonActionPerformed
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> catagorySelectionComboBox;
    private javax.swing.JButton confirmButton;
    private javax.swing.JLabel editItemHeader;
    private javax.swing.JTextField enterPartNameTextField;
    private javax.swing.JSpinner itemPriceSpinner;
    private javax.swing.JSpinner itemQuantitySpinner;
    private javax.swing.JLabel partNameJLabel;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JLabel quantitiyLable;
    // End of variables declaration//GEN-END:variables
}
